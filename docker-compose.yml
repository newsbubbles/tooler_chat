version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-34130}:${BACKEND_PORT:-34130}"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/toolerchat
      - SECRET_KEY=${SECRET_KEY:-very-secret-key-for-development-only}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - PORT=${BACKEND_PORT:-34130}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - STRUCTURED_LOGS=${STRUCTURED_LOGS:-true}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./backend/app:/app/app
      - ./logs:/app/logs  # Mount logs directory
    depends_on:
      - db
    restart: always
    networks:
      - app-network

#  frontend:
#    build: ./frontend
#    ports:
#      - "${FRONTEND_PORT:-34140}:80"
#    environment:
#      - BACKEND_URL=http://backend:${BACKEND_PORT:-34130}
#      - REACT_APP_API_URL=/api
#    depends_on:
#      - backend
#    networks:
#      - app-network

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=toolerchat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:
  logs_data:  # Define a named volume for logs

networks:
  app-network:
    driver: bridge
